import{d as T}from"../chunk-MIGENICT.mjs";import h from"fs";import w from"gray-matter";import{join as g}from"path";import{readFile as _}from"fs/promises";import{join as E,resolve as F}from"path";import M from"gray-matter";import N from"sift";import{firstBy as b}from"thenby";var D=E(process.cwd(),process.env.OST_CONTENT_PATH||"outstatic/content"),k=F(D,"./metadata.json"),B=()=>T(void 0,null,function*(){var i;let s=yield _(k),r=JSON.parse(s.toString()),d=(i=r==null?void 0:r.metadata)!=null?i:[];return{find:(t,a)=>{let f=d.filter(N(t)),u=a!=null?a:[],p=0,m,o={sort:e=>{let y=(n,l)=>{let S=l;for(let[A,j]of Object.entries(n))S=S.thenBy(A,{direction:j>=0?"asc":"desc"});return S},x=(n,l)=>l.thenBy(n);if(typeof e=="number"||typeof e=="symbol")throw new Error("sort must be either an array of fields or an object containing field keys and sort directions");if(typeof e=="string")return f.sort(b(e,{direction:"asc"})),o;if(!Array.isArray(e)){let n=b("\0");return n=y(e,n),f.sort(n),o}let c;for(let n of e){if(!c)if(typeof n=="string"){c=b(n,{direction:"asc"});continue}else c=b("\0");if(!c)throw new Error("Unreachable condition: !fn");if(typeof n=="string")c=x(n,c);else{if(typeof n=="number"||typeof n=="symbol")throw new Error("sort must be either an array of fields or an object containing field keys and sort directions");c=y(n,c)}}return c&&f.sort(c),o},project:e=>(u=e,o),skip:e=>(p=e,o),limit:e=>(m=e,o),first:()=>T(void 0,null,function*(){let e=yield o.toArray();return e==null?void 0:e[0]}),toArray:()=>T(void 0,null,function*(){let e=JSON.parse(JSON.stringify(f)).slice(p,m?p+m:void 0),y=Array.isArray(u)?u:Object.keys(u);return yield Promise.all(e.map(c=>T(void 0,null,function*(){if(y.length===0||y.includes("content")){let l=process.env.OST_MONOREPO_PATH?c.__outstatic.path.replace(process.env.OST_MONOREPO_PATH,""):c.__outstatic.path,S=yield _(F(process.cwd(),`./${l}`)),{content:A}=M(S.toString());c.content=A}let n={};for(let l of y)typeof c[l]!="undefined"&&(n[l]=c[l]);return n})))})};return o}}});var O=g(process.cwd(),process.env.OST_CONTENT_PATH||"outstatic/content"),P=/\.mdx?$/i;function C(s){let r=g(O,s);return I(r).map(t=>t.replace(P,""))}function H(s,r,d=[]){try{let i=r.replace(P,""),t=g(O,s),a=g(t,`${i}.md`);if(!h.existsSync(a))return console.error("File does not exist:",a),null;let f=h.readFileSync(a,"utf8"),{data:u,content:p}=w(f),m={};return u.status==="draft"?null:(d.forEach(o=>{o==="slug"&&(m[o]=i),o==="content"&&(m[o]=p),typeof u[o]!="undefined"&&(m[o]=u[o])}),m)}catch(i){return console.error({getDocumentBySlug:i}),null}}function L(s,r=[]){return C(s).map(t=>H(s,t,[...r,"publishedAt","status"])).filter(t=>t!==null&&t.status==="published").sort((t,a)=>t.publishedAt>a.publishedAt?-1:1)}var V=s=>{try{return h.readdirSync(O+"/"+s).filter(t=>P.test(t)).filter(t=>{let a=g(O,s),f=g(a,`${t}`),u=h.readFileSync(f,"utf8"),{data:p}=w(u);return p.status==="published"}).map(t=>t.replace(P,"")).map(t=>({params:{slug:t}}))}catch(r){return console.error({getDocumentPaths:r}),[]}},W=()=>{try{return h.readdirSync(O).filter(r=>!/\.json$/.test(r))}catch(s){return console.error({getCollections:s}),[]}};function I(s){try{return h.readdirSync(s,{withFileTypes:!0}).filter(i=>i.isFile()&&P.test(i.name)).map(i=>i.name)}catch(r){return console.error({readMdMdxFiles:r}),[]}}export{W as getCollections,H as getDocumentBySlug,V as getDocumentPaths,C as getDocumentSlugs,L as getDocuments,B as load};
